{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Desktop\\\\imdb-clone-master\\\\imdb-clone-master\\\\src\\\\components\\\\MovieList\\\\MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Card from '../Card/Card';\nimport './MovieList.css';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  const [MovieList, setMovieList] = useState([]);\n  const {\n    type\n  } = useParams();\n  useEffect(() => {\n    getData();\n  }, []);\n  useEffect(() => {\n    getData();\n  }, [type]);\n  const getData = () => {\n    fetch(`https://api.themoviedb.org/3/movie/${type ? type : \"popular\"}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`).then(res => res.json()).then(data => setMovieList(data.results));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie__list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"list__title\",\n        children: (type ? type : \"POPULAR\").toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list__cards\",\n        children: MovieList.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(MovieList, \"mTd/AdiQmDCnRfkkQV76zcNwF68=\", false, function () {\n  return [useParams];\n});\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","Card","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieList","_s","setMovieList","type","getData","fetch","then","res","json","data","results","children","className","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Desktop/imdb-clone-master/imdb-clone-master/src/components/MovieList/MovieList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from '../Card/Card'\nimport './MovieList.css'\n\nimport { useParams } from \"react-router-dom\";\n\nconst MovieList = () => {\n\n    const [MovieList , setMovieList] = useState([])\n    const {type}= useParams();\n\n    useEffect( () => {\n        getData();\n    },[])\n\n    useEffect ( () => {\n        getData();\n\n    }, [type])\n\n    const getData = () => {\n        fetch(`https://api.themoviedb.org/3/movie/${type ? type : \"popular\"}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`)\n        .then(res => res.json())\n        .then(data => setMovieList(data.results))\n    }\nreturn(\n    <>\n    <div className=\"movie__list\">\n        <h2 className=\"list__title\">{(type ? type : \"POPULAR\").toUpperCase()}</h2>\n        <div className=\"list__cards\">\n            {\n                MovieList.map( movie => (\n                    <Card movie={movie} />\n                ))\n            }\n        </div>\n    </div>\n\n    </>\n)\n\n\n} \n\n\nexport default MovieList"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAO,iBAAiB;AAExB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAM,CAACD,SAAS,EAAGE,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM;IAACU;EAAI,CAAC,GAAER,SAAS,EAAE;EAEzBH,SAAS,CAAE,MAAM;IACbY,OAAO,EAAE;EACb,CAAC,EAAC,EAAE,CAAC;EAELZ,SAAS,CAAG,MAAM;IACdY,OAAO,EAAE;EAEb,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEV,MAAMC,OAAO,GAAGA,CAAA,KAAM;IAClBC,KAAK,CAAE,sCAAqCF,IAAI,GAAGA,IAAI,GAAG,SAAU,0DAAyD,CAAC,CAC7HG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIP,YAAY,CAACO,IAAI,CAACC,OAAO,CAAC,CAAC;EAC7C,CAAC;EACL,oBACIb,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACAd,OAAA;MAAKe,SAAS,EAAC,aAAa;MAAAD,QAAA,gBACxBd,OAAA;QAAIe,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAE,CAACR,IAAI,GAAGA,IAAI,GAAG,SAAS,EAAEU,WAAW;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC1EpB,OAAA;QAAKe,SAAS,EAAC,aAAa;QAAAD,QAAA,EAEpBX,SAAS,CAACkB,GAAG,CAAEC,KAAK,iBAChBtB,OAAA,CAACH,IAAI;UAACyB,KAAK,EAAEA;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACtB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ,iBAEH;AAIP,CAAC;AAAAhB,EAAA,CApCKD,SAAS;EAAA,QAGGL,SAAS;AAAA;AAAAyB,EAAA,GAHrBpB,SAAS;AAuCf,eAAeA,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}